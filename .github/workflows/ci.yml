name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1,16 * *'

jobs:
  tests:
    name: PHP ${{ matrix.php }}, SF ${{ matrix.symfony }} - ${{ matrix.deps }}
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 1234
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mongo:
        image: mongo:4
        ports:
          - 27017:27017
    strategy:
      matrix:
        php: [7.4, 8.0, 8.1]
        symfony: [4.4.*, 5.4.*]
        deps: [highest]
        include:
          - php: 7.2
            symfony: '*'
            deps: lowest
            versions: lowest
          - php: 8.0
            symfony: 6.0.*
            deps: highest
          - php: 8.1
            symfony: 6.0.*
            deps: highest
          - php: 8.1
            symfony: 6.1.*
            deps: highest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.3

      - name: Verify MySQL version
        run: mysql --host 127.0.0.1 -uroot -p1234 -e "STATUS"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pgsql, sqlite, mongodb
          coverage: none
          tools: flex

      - name: Install dependencies
        uses: ramsey/composer-install@v1
        with:
          dependency-versions: ${{ matrix.deps }}
          composer-options: --prefer-dist
        env:
          SYMFONY_REQUIRE: ${{ matrix.symfony }}

      - name: 'Test: MySQL'
        run: vendor/bin/simple-phpunit -v
        env:
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Test: MySQL, FoundryBundle'
        run: vendor/bin/simple-phpunit -v
        env:
          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Test: MySQL, DAMABundle'
        run: vendor/bin/simple-phpunit -v --configuration phpunit-dama-doctrine.xml.dist
        env:
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Test: MySQL, FoundryBundle, DAMABundle'
        run: vendor/bin/simple-phpunit -v --configuration phpunit-dama-doctrine.xml.dist
        env:
          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Test: MySQL, DoctrineMigrationsBundle'
        run: vendor/bin/simple-phpunit -v
        env:
          USE_MIGRATIONS: 1
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Test: MySQL, DoctrineMigrationsBundle, DAMABundle'
        run: vendor/bin/simple-phpunit -v --configuration phpunit-dama-doctrine.xml.dist
        env:
          USE_MIGRATIONS: 1
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Test: PostgreSQL'
        run: vendor/bin/simple-phpunit -v
        env:
          DATABASE_URL: postgresql://postgres:1234@127.0.0.1:5432/zenstruck_foundry?charset=utf8

      - name: 'Test: PostgreSQL, FoundryBundle'
        run: vendor/bin/simple-phpunit -v
        env:
          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: postgresql://postgres:1234@127.0.0.1:5432/zenstruck_foundry?charset=utf8

#      - name: 'Test: PostgreSQL, DAMABundle'
#        run: vendor/bin/simple-phpunit -v --configuration phpunit-dama-doctrine.xml.dist
#        env:
#          DATABASE_URL: postgresql://postgres:1234@127.0.0.1:5432/zenstruck_foundry?charset=utf8

#      - name: 'Test: PostgreSQL, FoundryBundle, DAMABundle'
#        run: vendor/bin/simple-phpunit -v --configuration phpunit-dama-doctrine.xml.dist
#        env:
#          USE_FOUNDRY_BUNDLE: 1
#          DATABASE_URL: postgresql://postgres:1234@127.0.0.1:5432/zenstruck_foundry?charset=utf8

      - name: 'Test: SQLite'
        run: vendor/bin/simple-phpunit -v
        env:
          DATABASE_URL: sqlite:///%kernel.cache_dir%/app.db

      - name: 'Test: SQLite, FoundryBundle'
        run: vendor/bin/simple-phpunit -v
        env:
          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: sqlite:///%kernel.cache_dir%/app.db

      - name: 'Test: SQLite, DAMABundle'
        run: vendor/bin/simple-phpunit -v --configuration phpunit-dama-doctrine.xml.dist
        env:
          DATABASE_URL: sqlite:///%kernel.cache_dir%/app.db

      - name: 'Test: SQLite, FoundryBundle, DAMABundle'
        run: vendor/bin/simple-phpunit -v --configuration phpunit-dama-doctrine.xml.dist
        env:
#          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: sqlite:///%kernel.cache_dir%/app.db

      - name: 'Test: MySQL, Mongo'
        run: vendor/bin/simple-phpunit -v
        env:
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7
          MONGO_URL: mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb

      - name: 'Test: MySQL, Mongo, FoundryBundle'
        run: vendor/bin/simple-phpunit -v
        env:
          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7
          MONGO_URL: mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb

      - name: 'Test: MySQL, Mongo, DAMABundle'
        run: vendor/bin/simple-phpunit -v --configuration phpunit-dama-doctrine.xml.dist
        env:
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7
          MONGO_URL: mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb

      - name: 'Test: Mongo standalone'
        run: vendor/bin/simple-phpunit -v
        env:
          MONGO_URL: mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 1234
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mongo:
        image: mongo:4
        ports:
          - 27017:27017
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.3

      - name: Verify MySQL version
        run: mysql --host 127.0.0.1 -uroot -p1234 -e "STATUS"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: pgsql, sqlite
          coverage: xdebug
          ini-values: xdebug.mode=coverage

      - name: Install dependencies
        uses: ramsey/composer-install@v1
        with:
          composer-options: --prefer-dist

      - name: 'Coverage: MySQL'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=mysql.clover
        env:
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Coverage: MySQL, FoundryBundle'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=mysql-foundry.clover
        env:
          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Coverage: MySQL, DAMABundle'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=mysql-dama.clover --configuration phpunit-dama-doctrine.xml.dist
        env:
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Coverage: MySQL, FoundryBundle, DAMABundle'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=mysql-foundry-dama.clover --configuration phpunit-dama-doctrine.xml.dist
        env:
          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Test: MySQL, DoctrineMigrationsBundle'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=mysql-migrations.clover
        env:
          USE_MIGRATIONS: 1
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Test: MySQL, DoctrineMigrationsBundle, DAMABundle'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=mysql-migrations-dama.clover --configuration phpunit-dama-doctrine.xml.dist
        env:
          USE_MIGRATIONS: 1
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7

      - name: 'Coverage: PostgreSQL'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=postgres.clover
        env:
          DATABASE_URL: postgresql://postgres:1234@127.0.0.1:5432/zenstruck_foundry?charset=utf8

      - name: 'Coverage: PostgreSQL, FoundryBundle'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=postgres-foundry.clover
        env:
          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: postgresql://postgres:1234@127.0.0.1:5432/zenstruck_foundry?charset=utf8

#      - name: 'Coverage: PostgreSQL, DAMABundle'
#        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=postgres-dama.clover --configuration phpunit-dama-doctrine.xml.dist
#        env:
#          DATABASE_URL: postgresql://postgres:1234@127.0.0.1:5432/zenstruck_foundry?charset=utf8

#      - name: 'Coverage: PostgreSQL, FoundryBundle, DAMABundle'
#        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=postgres-foundry-dama.clover --configuration phpunit-dama-doctrine.xml.dist
#        env:
#          USE_FOUNDRY_BUNDLE: 1
#          DATABASE_URL: postgresql://postgres:1234@127.0.0.1:5432/zenstruck_foundry?charset=utf8

      - name: 'Coverage: SQLite'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=sqlite.clover
        env:
          DATABASE_URL: sqlite:///%kernel.cache_dir%/app.db

      - name: 'Coverage: SQLite, FoundryBundle'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=sqlite-foundry.clover
        env:
          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: sqlite:///%kernel.cache_dir%/app.db

      - name: 'Coverage: SQLite, DAMABundle'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=sqlite-dama.clover --configuration phpunit-dama-doctrine.xml.dist
        env:
          DATABASE_URL: sqlite:///%kernel.cache_dir%/app.db

      - name: 'Coverage: SQLite, FoundryBundle, DAMABundle'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=sqlite-foundry-dama.clover --configuration phpunit-dama-doctrine.xml.dist
        env:
#          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: sqlite:///%kernel.cache_dir%/app.db

      - name: 'Test: MySQL, Mongo'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=mysql-mongo.clover
        env:
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7
          MONGO_URL: mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb

      - name: 'Test: MySQL, Mongo, FoundryBundle'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=mysql-mongo-foundry.clover
        env:
          USE_FOUNDRY_BUNDLE: 1
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7
          MONGO_URL: mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb

      - name: 'Test: MySQL, Mongo, DAMABundle'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=mysql-mongo-dama.clover --configuration phpunit-dama-doctrine.xml.dist
        env:
          DATABASE_URL: mysql://root:1234@127.0.0.1:3306/zenstruck_foundry?serverVersion=5.7
          MONGO_URL: mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb

      - name: 'Test: Mongo standalone'
        run: vendor/bin/simple-phpunit -v --coverage-text --coverage-clover=mongo.clover
        env:
          MONGO_URL: mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb

      - name: Publish coverage report to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./*.clover

  composer-validate:
    uses: zenstruck/.github/.github/workflows/php-composer-validate.yml@main

  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none

      - name: Install dependencies
        uses: ramsey/composer-install@v1
        with:
          composer-options: --prefer-dist

      - name: Build docs
        run: bin/build-docs

  cs-check:
    name: PHP CS-Fixer check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.3

      - name: Setup PHP
        uses: shivammathur/setup-php@2.7.0
        with:
          php-version: 7.2
          coverage: none

      - name: Install dependencies
        uses: ramsey/composer-install@v1
        with:
          composer-options: --prefer-dist

      - name: Install PHP CS-Fixer
        run: composer bin cs-fixer install

      - name: Run PHP CS-Fixer check
        run: bin/tools/cs-fixer/vendor/friendsofphp/php-cs-fixer/php-cs-fixer fix --dry-run --diff

  static-analysis:
    name: Psalm Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.3

      - name: Setup PHP
        uses: shivammathur/setup-php@2.7.0
        with:
          php-version: 7.2
          coverage: none

      - name: Install dependencies
        uses: ramsey/composer-install@v1
        with:
          composer-options: --prefer-dist

      - name: Install Psalm
        run: composer bin psalm install

      - name: Run static analysis
        run: bin/tools/psalm/vendor/vimeo/psalm/psalm --output-format=github --php-version=7.2

  docker-stack:
    name: CI with docker stack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.3

      - name: Run test suite with docker
        run: |
          make validate
