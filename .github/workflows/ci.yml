name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1,16 * *'

jobs:
  tests:
    name: P:${{ matrix.php }}, S:${{ matrix.symfony }}, D:${{ matrix.database }}${{ matrix.deps == 'lowest' && ' (lowest)' || '' }}${{ matrix.use-dama == 1 && contains(matrix.database, 'sql') && ' (dama)' || '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ 8.1, 8.2 ]
        deps: [ highest ]
        symfony: [ 6.3.*, 6.4.*, 7.0.* ]
        database: [ mysql, mongo ]
        use-dama: [ 1 ]
        exclude:
          - php: 8.1
            symfony: 7.0.*
        include:
          - php: 8.0
            deps: lowest
            symfony: '5.4.*'
            database: mysql|mongo
            use-dama: 1
          - php: 8.2
            deps: highest
            symfony: '*'
            database: none
            use-dama: 1
          - php: 8.2
            deps: highest
            symfony: '*'
            database: mysql|mongo
            use-dama: 1
          - php: 8.2
            deps: highest
            symfony: '*'
            database: pgsql|mongo
            use-dama: 1
          - php: 8.2
            deps: highest
            symfony: '*'
            database: pgsql
            use-dama: 0
          - php: 8.2
            deps: highest
            symfony: '*'
            database: sqlite
            use-dama: 0
    env:
      DATABASE_URL: ${{ contains(matrix.database, 'mysql') && 'mysql://root:root@localhost:3306/foundry?serverVersion=5.7.42' || contains(matrix.database, 'pgsql') && 'postgresql://root:root@localhost:5432/foundry?serverVersion=15' || contains(matrix.database, 'sqlite') && 'sqlite:///%kernel.project_dir%/var/data.db' || '' }}
      MONGO_URL: ${{ contains(matrix.database, 'mongo') && 'mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb' || '' }}
      USE_DAMA_DOCTRINE_TEST_BUNDLE: ${{ matrix.use-dama == 1 && contains(matrix.database, 'sql') && 1 || 0 }}
    services:
      postgres:
        image: ${{ contains(matrix.database, 'pgsql') && 'postgres:15' || '' }}
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: foundry
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mongo:
        image: ${{ contains(matrix.database, 'mongo') && 'mongo:4' || '' }}
        ports:
          - 27017:27017
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          tools: flex

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.deps }}
          composer-options: --prefer-dist
        env:
          SYMFONY_REQUIRE: ${{ matrix.symfony }}

      - name: Set up MySQL
        if: contains(matrix.database, 'mysql')
        run: sudo /etc/init.d/mysql start

      - name: Test
        run: vendor/bin/phpunit -c "${PHPUNIT_CONFIG_FILE}"
        shell: bash
        env:
          TEST_MIGRATIONS: 1
          PHPUNIT_CONFIG_FILE: ${{ env.USE_DAMA_DOCTRINE_TEST_BUNDLE == 1 && 'phpunit.dama.xml.dist' || 'phpunit.xml.dist' }}

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://root:root@localhost:5432/foundry?serverVersion=15
      MONGO_URL: mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb
    services:
      mongo:
        image: mongo:4
        ports:
          - 27017:27017
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: foundry
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          coverage: xdebug
          ini-values: xdebug.mode=coverage

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: --prefer-dist

      - name: Test with coverage
        run: vendor/bin/phpunit -c phpunit.dama.xml.dist --coverage-text --coverage-clover coverage.xml
        shell: bash
        env:
          USE_FOUNDRY_BUNDLE: 0
          SYMFONY_DEPRECATIONS_HELPER: disabled

      - name: Publish coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

  composer-validate:
    uses: zenstruck/.github/.github/workflows/php-composer-validate.yml@main

  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          coverage: none

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: --prefer-dist

      - name: Build docs
        run: bin/build-docs

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          coverage: none

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: --prefer-dist

      - name: Install PHPStan
        run: composer bin phpstan install

      - name: Run static analysis
        run: bin/tools/phpstan/vendor/phpstan/phpstan/phpstan analyse

      - name: Install Psalm
        run: composer bin psalm install

      - name: Run Psalm on factories generated with maker
        run: bin/tools/psalm/vendor/vimeo/psalm/psalm

  fixcs:
    name: Run php-cs-fixer
    needs: sync-with-template
    if: (github.event_name == 'push' || github.event_name == 'schedule') && !startsWith(github.ref, 'refs/tags') && github.repository_owner == 'zenstruck'
    runs-on: ubuntu-latest
    steps:
      - uses: zenstruck/.github@php-cs-fixer
        with:
          php: 8
          key: ${{ secrets.GPG_PRIVATE_KEY }}
          token: ${{ secrets.COMPOSER_TOKEN }}

  sync-with-template:
    name: Sync meta files
    if: (github.event_name == 'push' || github.event_name == 'schedule') && !startsWith(github.ref, 'refs/tags') && github.repository_owner == 'zenstruck'
    runs-on: ubuntu-latest
    steps:
      - uses: zenstruck/.github@sync-with-template
        with:
          key: ${{ secrets.GPG_PRIVATE_KEY }}
          token: ${{ secrets.COMPOSER_TOKEN }}
